#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/fd82c6be-aa19-4bf6-9e34-3d288e56f33d 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight led;
  CloudTemperatureSensor tempreture;
  CloudRelativeHumidity humidity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <DFRobot_DHT11.h>
DFRobot_DHT11 DHT;
#define DHT11_PIN 15


int pled = 5;
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  pinMode(pled,OUTPUT);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  onTemperaturChange();
  onLedChange();
}


void onTemperaturChange()  {
  
  DHT.read(DHT11_PIN);
  Serial.print("temp:");
  tempreture = DHT.temperature;
  Serial.print(tempreture);
  Serial.print("  humi:");
  humidity = DHT.humidity;
  Serial.println(humidity);
  delay(1000);

}
/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLedChange()  {
  // Add your code here to act upon Led change
  if (led == 1)
  {
    digitalWrite(pled, HIGH);
  }
  else
  {
    digitalWrite(pled, LOW);
  }
}


